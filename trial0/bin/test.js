// Generated by Haxe 4.0.0+ef18b627e
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var button = window.document.createElement("button");
	button.textContent = "Click me!";
	button.onclick = function(event) {
		js_Browser.alert("Haxe is great");
	};
	window.document.body.appendChild(button);
	var argb = [-7077677,-11861886,-16776961,-16711936,-256,-33024,-65536,-16777216,-12303292,-13421773,-15987700,-15658735,-1];
	var this1 = new Float32Array(100);
	var this2 = this1;
	this2[0] = 0;
	var this3 = this2;
	var arrayColor = this3;
	var _g = 0;
	while(_g < argb.length) {
		var c = argb[_g];
		++_g;
		flat__$Float32FlatRGBA_Float32FlatRGBA_$Impl_$.set_red(arrayColor,(c >> 16 & 255) / 255);
		var v = (c & 255) / 255;
		arrayColor[Std.int(arrayColor[0]) * 4 + 1] = v;
		var v1 = (c >> 8 & 255) / 255;
		arrayColor[Std.int(arrayColor[0]) * 4 + 2] = v1;
		var v2 = (c >> 24 & 255) / 255;
		arrayColor[Std.int(arrayColor[0]) * 4 + 3] = v2;
		var pos_ = arrayColor[0] + 1.;
		arrayColor[0] = pos_;
	}
	console.log("Main.hx:35:","arrayColor list of colors contained as r, g, b, a Floats ");
	arrayColor[0] = 0;
	var _g1 = arrayColor;
	while(true) {
		var l = _g1.length - 1;
		if(!(_g1[0] < (l < 0 ? 0 : Math.ceil(l / 4)))) {
			break;
		}
		var pos_1 = _g1[0] + 1.;
		_g1[0] = pos_1;
		var i = _g1[0];
		console.log("Main.hx:37:",StringTools.hex(Math.round(arrayColor[Std.int(arrayColor[0]) * 4 + 1] * 255) | Math.round(arrayColor[Std.int(arrayColor[0]) * 4 + 2] * 255) << 8 | Math.round(flat__$Float32FlatRGBA_Float32FlatRGBA_$Impl_$.get_red(arrayColor) * 255) << 16));
	}
	console.log("Main.hx:38:","pos " + arrayColor[0]);
	var l1 = arrayColor.length - 1;
	console.log("Main.hx:39:","len " + (l1 < 0 ? 0 : Math.ceil(l1 / 4)));
	console.log("Main.hx:40:",arrayColor.subarray(1,arrayColor.length - 1));
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.int = function(x) {
	return x | 0;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var flat__$Float32FlatRGBA_Float32FlatRGBA_$Impl_$ = {};
flat__$Float32FlatRGBA_Float32FlatRGBA_$Impl_$.__name__ = true;
flat__$Float32FlatRGBA_Float32FlatRGBA_$Impl_$.get_red = function(this1) {
	return this1[Std.int(this1[0]) * 4];
};
flat__$Float32FlatRGBA_Float32FlatRGBA_$Impl_$.set_red = function(this1,v) {
	this1[Std.int(this1[0]) * 4] = v;
	return v;
};
var haxe_io_Bytes = function() { };
haxe_io_Bytes.__name__ = true;
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.isClass = function(o) {
	return o.__name__;
};
js_Boot.isEnum = function(e) {
	return e.__ename__;
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (js_Boot.isClass(o) || js_Boot.isEnum(o))) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_Browser = function() { };
js_Browser.__name__ = true;
js_Browser.alert = function(v) {
	window.alert(Std.string(v));
};
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
Main.main();
})({});
